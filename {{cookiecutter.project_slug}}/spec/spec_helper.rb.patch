--- ./spec/spec_helper.rb	2025-07-06 20:00:28
+++ ./spec/spec_helper.rb~	2025-07-06 20:00:06
@@ -1,3 +1,6 @@
+# frozen_string_literal: true
+# typed: false
+
 # This file was generated by the `rails generate rspec:install` command. Conventionally, all
 # specs live under a `spec` directory, which RSpec adds to the `$LOAD_PATH`.
 # The generated `.rspec` file contains `--require spec_helper` which will cause
{% if cookiecutter.use_checkoff == 'Yes' %}@@ -13,7 +16,79 @@
 # it.
 #
 # See https://rubydoc.info/gems/rspec-core/RSpec/Core/Configuration
+
+# @sg-ignore
+ENV['REDIS_HOSTNAME'] = 'deactivated-anyway'{% else %}@@ -13,7 +16,77 @@
 # it.
 #
 # See https://rubydoc.info/gems/rspec-core/RSpec/Core/Configuration
+{% endif %}
+require 'simplecov'
+require 'simplecov-lcov'
+require 'undercover/simplecov_formatter'
+
+SimpleCov::Formatter::LcovFormatter.config.report_with_single_file = true
+SimpleCov.formatters = SimpleCov::Formatter::MultiFormatter.new(
+  [
+    SimpleCov::Formatter::HTMLFormatter,
+    SimpleCov::Formatter::LcovFormatter,
+    SimpleCov::Formatter::Undercover,
+  ]
+)
+# https://github.com/simplecov-ruby/simplecov/blob/ba57b3c07381e7d7d83c255309f371f816bf942d/lib/simplecov/profiles/rails.rb
+SimpleCov.start 'rails' do
+  # @!parse
+  #   extend SimpleCov::Configuration
+
+  # this dir used by CircleCI
+  add_group 'Scripts', 'script/'
+  track_files 'script/*'
+  add_filter '%r{^script/create-script.sh}'
+
+  add_filter(%r{^/vendor/bundle})
+  add_filter(%r{^/spec})
+  track_files 'lib/**/*.rb'
+
+  enable_coverage(:branch) # Report branch coverage to trigger branch-level undercover warnings
+end
+
+require 'rspec'
+require 'webmock/rspec'
+require 'stringio'
+
+# Capture logs during spec runs
+module LogCaptureHelper
+  # @sg-ignore
+  # @return [String]
+  def capture_logs
+    original_logger = Rails.logger
+    log_output = StringIO.new
+    Rails.logger = Logger.new(log_output)
+
+    yield
+
+    log_output.string
+  ensure
+    Rails.logger = original_logger
+  end
+end
+
+class RSpec::Configuration
+  include LogCaptureHelper
+end
+
 RSpec.configure do |config|
+  config.around do |example|
+    # @sg-ignore
+    log_messages = capture_logs do
+      example.run
+    end
+  ensure
+    # ideally this would be stashed somewhere and retrieved in the
+    # reporter so that these appear directly in the failure message
+    # instead of out of ordre earlier
+    if example.exception
+      puts "\n--- Logs for #{example.inspect_output} ---\n"
+      puts log_messages
+    end
+  end
+
   # rspec-expectations config goes here. You can use an alternate
   # assertion/expectation library such as wrong or the stdlib/minitest
   # assertions if you prefer.
